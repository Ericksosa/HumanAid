// <auto-generated />
using System;
using HumanAid.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HumanAid.Migrations
{
    [DbContext(typeof(HumanAidDbContext))]
    partial class HumanAidDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HumanAid.Models.Alimento", b =>
                {
                    b.Property<int>("AlimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlimentoId"));

                    b.Property<int>("EnvioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AlimentoId");

                    b.HasIndex("EnvioId");

                    b.ToTable("Alimento");
                });

            modelBuilder.Entity("HumanAid.Models.Envio", b =>
                {
                    b.Property<int>("EnvioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnvioId"));

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoEnvio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EnvioId");

                    b.ToTable("Envio");
                });

            modelBuilder.Entity("HumanAid.Models.EnvioSede", b =>
                {
                    b.Property<int>("EnvioId")
                        .HasColumnType("int");

                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.HasKey("EnvioId", "SedeId");

                    b.HasIndex("SedeId");

                    b.ToTable("EnvioSede");
                });

            modelBuilder.Entity("HumanAid.Models.Medicamento", b =>
                {
                    b.Property<int>("MedicamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicamentoId"));

                    b.Property<string>("Dosis")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EnvioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.HasKey("MedicamentoId");

                    b.HasIndex("EnvioId");

                    b.ToTable("Medicamento");
                });

            modelBuilder.Entity("HumanAid.Models.MisionHumanitaria", b =>
                {
                    b.Property<int>("MisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MisionId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnvioId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("MisionId");

                    b.HasIndex("EnvioId");

                    b.ToTable("MisionHumanitaria");
                });

            modelBuilder.Entity("HumanAid.Models.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("HumanAid.Models.Sede", b =>
                {
                    b.Property<int>("SedeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SedeId"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaFundacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SedeId");

                    b.ToTable("Sede");
                });

            modelBuilder.Entity("HumanAid.Models.Socio", b =>
                {
                    b.Property<int>("SocioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SocioId"));

                    b.Property<string>("CuentaBancaria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.Property<int>("TipoCuotaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("SocioId");

                    b.HasIndex("SedeId");

                    b.HasIndex("TipoCuotaId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Socio");
                });

            modelBuilder.Entity("HumanAid.Models.TipoCuota", b =>
                {
                    b.Property<int>("TipoCuotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoCuotaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoCuotaId");

                    b.ToTable("TipoCuota");
                });

            modelBuilder.Entity("HumanAid.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("HumanAid.Models.Voluntario", b =>
                {
                    b.Property<int>("VoluntarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoluntarioId"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("VoluntarioId");

                    b.HasIndex("SedeId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Voluntario");
                });

            modelBuilder.Entity("HumanAid.Models.VoluntarioAdministrativo", b =>
                {
                    b.Property<int>("VoluntarioAdministrativoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoluntarioAdministrativoId"));

                    b.Property<string>("Departamento")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Profesion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("VoluntarioId")
                        .HasColumnType("int");

                    b.HasKey("VoluntarioAdministrativoId");

                    b.HasIndex("VoluntarioId")
                        .IsUnique()
                        .HasFilter("[VoluntarioId] IS NOT NULL");

                    b.ToTable("VoluntarioAdministrativo");
                });

            modelBuilder.Entity("HumanAid.Models.VoluntarioMision", b =>
                {
                    b.Property<int>("VoluntarioSanitarioId")
                        .HasColumnType("int");

                    b.Property<int>("MisionId")
                        .HasColumnType("int");

                    b.HasKey("VoluntarioSanitarioId", "MisionId");

                    b.HasIndex("MisionId");

                    b.ToTable("VoluntarioMision");
                });

            modelBuilder.Entity("HumanAid.Models.VoluntarioSanitario", b =>
                {
                    b.Property<int>("VoluntarioSanitarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoluntarioSanitarioId"));

                    b.Property<bool?>("Disponibilidad")
                        .HasColumnType("bit");

                    b.Property<int?>("NumeroTrabajosRealizados")
                        .HasColumnType("int");

                    b.Property<string>("Profesion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("VoluntarioId")
                        .HasColumnType("int");

                    b.HasKey("VoluntarioSanitarioId");

                    b.HasIndex("VoluntarioId")
                        .IsUnique()
                        .HasFilter("[VoluntarioId] IS NOT NULL");

                    b.ToTable("VoluntarioSanitario");
                });

            modelBuilder.Entity("HumanAid.Models.Alimento", b =>
                {
                    b.HasOne("HumanAid.Models.Envio", "Envio")
                        .WithMany("Alimentos")
                        .HasForeignKey("EnvioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Envio");
                });

            modelBuilder.Entity("HumanAid.Models.EnvioSede", b =>
                {
                    b.HasOne("HumanAid.Models.Envio", "Envio")
                        .WithMany("EnvioSedes")
                        .HasForeignKey("EnvioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HumanAid.Models.Sede", "Sede")
                        .WithMany("EnvioSedes")
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Envio");

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("HumanAid.Models.Medicamento", b =>
                {
                    b.HasOne("HumanAid.Models.Envio", "Envio")
                        .WithMany("Medicamentos")
                        .HasForeignKey("EnvioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Envio");
                });

            modelBuilder.Entity("HumanAid.Models.MisionHumanitaria", b =>
                {
                    b.HasOne("HumanAid.Models.Envio", "Envio")
                        .WithMany("MisionesHumanitarias")
                        .HasForeignKey("EnvioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Envio");
                });

            modelBuilder.Entity("HumanAid.Models.Socio", b =>
                {
                    b.HasOne("HumanAid.Models.Sede", "Sede")
                        .WithMany("Socios")
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HumanAid.Models.TipoCuota", "TipoCuota")
                        .WithMany("Socios")
                        .HasForeignKey("TipoCuotaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HumanAid.Models.Usuario", "Usuario")
                        .WithOne("Socio")
                        .HasForeignKey("HumanAid.Models.Socio", "UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sede");

                    b.Navigation("TipoCuota");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HumanAid.Models.Usuario", b =>
                {
                    b.HasOne("HumanAid.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("HumanAid.Models.Voluntario", b =>
                {
                    b.HasOne("HumanAid.Models.Sede", "Sede")
                        .WithMany("Voluntarios")
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HumanAid.Models.Usuario", "Usuario")
                        .WithOne("Voluntario")
                        .HasForeignKey("HumanAid.Models.Voluntario", "UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sede");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HumanAid.Models.VoluntarioAdministrativo", b =>
                {
                    b.HasOne("HumanAid.Models.Voluntario", "Voluntario")
                        .WithOne("VoluntarioAdministrativo")
                        .HasForeignKey("HumanAid.Models.VoluntarioAdministrativo", "VoluntarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("HumanAid.Models.VoluntarioMision", b =>
                {
                    b.HasOne("HumanAid.Models.MisionHumanitaria", "MisionHumanitaria")
                        .WithMany("VoluntarioMisiones")
                        .HasForeignKey("MisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HumanAid.Models.VoluntarioSanitario", "VoluntarioSanitario")
                        .WithMany("VoluntarioMisiones")
                        .HasForeignKey("VoluntarioSanitarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MisionHumanitaria");

                    b.Navigation("VoluntarioSanitario");
                });

            modelBuilder.Entity("HumanAid.Models.VoluntarioSanitario", b =>
                {
                    b.HasOne("HumanAid.Models.Voluntario", "Voluntario")
                        .WithOne("VoluntarioSanitario")
                        .HasForeignKey("HumanAid.Models.VoluntarioSanitario", "VoluntarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("HumanAid.Models.Envio", b =>
                {
                    b.Navigation("Alimentos");

                    b.Navigation("EnvioSedes");

                    b.Navigation("Medicamentos");

                    b.Navigation("MisionesHumanitarias");
                });

            modelBuilder.Entity("HumanAid.Models.MisionHumanitaria", b =>
                {
                    b.Navigation("VoluntarioMisiones");
                });

            modelBuilder.Entity("HumanAid.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("HumanAid.Models.Sede", b =>
                {
                    b.Navigation("EnvioSedes");

                    b.Navigation("Socios");

                    b.Navigation("Voluntarios");
                });

            modelBuilder.Entity("HumanAid.Models.TipoCuota", b =>
                {
                    b.Navigation("Socios");
                });

            modelBuilder.Entity("HumanAid.Models.Usuario", b =>
                {
                    b.Navigation("Socio")
                        .IsRequired();

                    b.Navigation("Voluntario")
                        .IsRequired();
                });

            modelBuilder.Entity("HumanAid.Models.Voluntario", b =>
                {
                    b.Navigation("VoluntarioAdministrativo")
                        .IsRequired();

                    b.Navigation("VoluntarioSanitario")
                        .IsRequired();
                });

            modelBuilder.Entity("HumanAid.Models.VoluntarioSanitario", b =>
                {
                    b.Navigation("VoluntarioMisiones");
                });
#pragma warning restore 612, 618
        }
    }
}
