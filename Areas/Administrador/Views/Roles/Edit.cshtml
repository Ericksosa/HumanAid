@model HumanAid.Models.Rol

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Rol</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="RolId" />

            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="FechaRegistro" class="control-label"></label>
                <input asp-for="FechaRegistro" class="form-control" />
                <span asp-validation-for="FechaRegistro" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>Editar Permisos</label>
                @if (ViewBag.Permisos != null && Model.RolPermisos != null)
                {
                    foreach (var permiso in ViewBag.Permisos)
                    {
                        <div>
                            <input type="checkbox" name="permisosSeleccionados" value="@permiso.PermisoId"
                            @(Model.RolPermisos.Any(rp => rp.PermisoId == permiso.PermisoId) ? "checked" : "") />
                            <label>@permiso.Nombre</label>
                        </div>
                    }
                }
                else
                {
                    <p>No se encontraron permisos disponibles.</p>
                }
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
