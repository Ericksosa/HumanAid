@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<HumanAid.Models.Envio>

@{
    ViewData["Title"] = "Envios";
}

<div class="container mb-5">
    <div class="row mb-4">
        <div class="col-12 text-center">
            <h1 class="display-4 fw-bold">Resumen de Envios </h1>
            <p class="text-muted">Gestiona los envios de las donaciones realizadas</p>
        </div>
    </div>
</div>

<div class="container">
    <!-- Barra de acciones -->
    <div class="row mb-4 align-items-center">
        <div class="col-md-6">
            <a asp-action="Create" class="btn btn-success">Crear Nuevo</a>
        </div>
        <div class="col-md-6">
            <div class="d-flex justify-content-end">
            <form asp-action="Index" method="get" class="d-flex align-items-center">
                <label for="sedeId" class="me-4">Filtrar por Sede:</label>
                <select name="sedeId" id="sedeId" class="form-select me-2" style="width: auto;">
                    <option value="">Todas</option>
                    @foreach (var sede in ViewBag.Sedes)
                    {
                            <option value="@sede.SedeId">@sede.Nombre</option>
                    }
                </select>
                <button type="submit" class="btn btn-primary">Filtrar</button>
            </form>
            </div>

        </div>
    </div>

    <!-- Tabla de envíos -->
<div class="card shadow-sm border-0">
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover table-borderless align-middle">
                <thead class="bg-light text-center">
                    <tr>
                        <th class="py-3 px-4">@Html.DisplayNameFor(model => model.FirstOrDefault().Fecha)</th>
                        <th class="py-3 px-4">@Html.DisplayNameFor(model => model.FirstOrDefault().Destino)</th>
                        <th class="py-3 px-4">@Html.DisplayName("Sede Organizadora")</th>
                        <th class="py-3 px-4">@Html.DisplayNameFor(model => model.FirstOrDefault().TipoEnvio)</th>
                        <th class="py-3 px-4">@Html.DisplayNameFor(model => model.FirstOrDefault().CodigoEnvio)</th>
                        <th class="py-3 px-4">@Html.DisplayNameFor(model => model.FirstOrDefault().Estado)</th>
                        <th class="py-3 px-4">@Html.DisplayNameFor(model => model.FirstOrDefault().FechaSalida)</th>
                        <th class="py-3 px-4 text-center">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="text-center">
                                <td class="py-3 px-4">@Html.DisplayFor(modelItem => item.Fecha)</td>
                                <td class="py-3 px-4">@Html.DisplayFor(modelItem => item.Destino)</td>
                                <td class="py-3 px-4">
                                    @if (item.EnvioSedes != null && item.EnvioSedes.Any())
                                    {
                                        @string.Join(", ", item.EnvioSedes.Select(s => s.Sede.Nombre))
                                    }
                                </td>
                                <td class="py-3 px-4">@Html.DisplayFor(modelItem => item.TipoEnvio)</td>
                                <td class="py-3 px-4">@Html.DisplayFor(modelItem => item.CodigoEnvio)</td>
                                    <td class="py-3 px-4">
                                        @switch (item.Estado)
                                        {
                                            case "Pendiente":
                                            <span class="badge bg-danger">Pendiente</span>
                                            break;
                                            case "Enviado":
                                             <span class="badge bg-warning text-dark">Enviado</span>
                                            break;
                                            case "Entregado":
                                            <span class="badge bg-success">Entregado</span>
                                            break;
                                            default:
                                            <span class="badge bg-secondary">Desconocido</span>
                                            break;
                                        }
                                    </td>
                                        <td class="py-3 px-4">@Html.DisplayFor(modelItem => item.FechaSalida)</td>
                                <td class="py-3 px-4 text-center">
                                    <div class="d-flex justify-content-center gap-2">
                                        <a asp-action="Edit" asp-route-id="@item.EnvioId" class="btn btn-sm btn-warning">
                                            <i class="bi bi-pencil"></i> Editar
                                        </a>
                                        <a asp-action="Details" asp-route-id="@item.EnvioId" class="btn btn-sm btn-primary">
                                            <i class="bi bi-info-circle"></i> Detalles
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.EnvioId" class="btn btn-sm btn-danger">
                                            <i class="bi bi-trash"></i> Eliminar
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                </tbody>
            </table>
        </div>
    </div>
</div>

    <!-- Paginación -->
    <div class="row mt-4">
        <div class="col-12">
            <nav>
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1, sedeId = ViewBag.CurrentSedeFilter })">Anterior</a>
                    </li>

                    @for (int i = 1; i <= Model.PageCount; i++)
                    {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i, sedeId = ViewBag.CurrentSedeFilter })">@i</a>
                            </li>
                    }

                    <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1, sedeId = ViewBag.CurrentSedeFilter })">Siguiente</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>
